(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{455:function(s,a,n){"use strict";n.r(a);var t=n(44),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"_008-函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_008-函数"}},[s._v("#")]),s._v(" 008 函数")]),s._v(" "),n("h2",{attrs:{id:"_01-形参与实参"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_01-形参与实参"}},[s._v("#")]),s._v(" 01 形参与实参")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("int add(int num1,int num2) //定义中的num1，2称为形式参数，形参\n{\n\tint sum = num1 + num2;\n\treturn sum;\n}\n\nint main(){\n\tint a = 2;\n\tint b = 3;\n\tint sum = add(a,b); //a,b称为实际参数，简称实参\n\treturn 0;\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h2",{attrs:{id:"_02-值传递"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_02-值传递"}},[s._v("#")]),s._v(" 02 值传递")]),s._v(" "),n("ul",[n("li",[s._v("值传递：函数调用时实参将数值传入给形参")]),s._v(" "),n("li",[s._v("值传递时，如果形参发生改变，并不会影响实参")])]),s._v(" "),n("h2",{attrs:{id:"_03-函数常见样式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_03-函数常见样式"}},[s._v("#")]),s._v(" 03 函数常见样式")]),s._v(" "),n("ol",[n("li",[s._v("无参无返")]),s._v(" "),n("li",[s._v("有参有返")]),s._v(" "),n("li",[s._v("无参有返")]),s._v(" "),n("li",[s._v("有参有返")])]),s._v(" "),n("h2",{attrs:{id:"_04-函数的声明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_04-函数的声明"}},[s._v("#")]),s._v(" 04 函数的声明")]),s._v(" "),n("p",[s._v("作用：告诉编译器函数名称以及如何调用函数，函数的实际主体可以单独定义.")]),s._v(" "),n("p",[s._v("函数的声明可以多次，但函数的定义只能有一次。")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("int max(int a,int b); //声明\n\n// 定义\nint max(int a,int b){\n\treturn 10;\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h2",{attrs:{id:"_05-函数的分文件编写"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_05-函数的分文件编写"}},[s._v("#")]),s._v(" 05 函数的分文件编写")]),s._v(" "),n("ol",[n("li",[s._v("创建后缀名为.h的头文件")]),s._v(" "),n("li",[s._v("创建后缀名为.cpp的源文件")]),s._v(" "),n("li",[s._v("在头文件中写函数的声明")]),s._v(" "),n("li",[s._v("在源文件中写函数的定义")])]),s._v(" "),n("p",[s._v("示例")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 创建hello.h\n#include <iostream>\nusing namespace std;\n\nvoid say();\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 创建hello.cpp\n#include "hello.h" //必须引入以关联，双引号表示引入自定义头文件\n\nvoid say(){\n\tcout << "找朋友" << endl;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 创建其它文件使用\n#include <iostream>\n#include "hello.h"\nusing namespace std;\nint main(){\n\n\tsay();\n\t\t\n\tsystem("pause");\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h2",{attrs:{id:"_06-指针与函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_06-指针与函数"}},[s._v("#")]),s._v(" 06 指针与函数")]),s._v(" "),n("h3",{attrs:{id:"_6-1-地址传递"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-地址传递"}},[s._v("#")]),s._v(" 6.1 地址传递")]),s._v(" "),n("p",[s._v("除了03的值传递，还有地址传递，就是通过传递地址的方式传递参数，比较简单，内容略。")]),s._v(" "),n("h3",{attrs:{id:"_6-2-指针函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-指针函数"}},[s._v("#")]),s._v(" 6.2 指针函数")]),s._v(" "),n("p",[s._v("返回值是指针的函数，这个不难理解。")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("int* fun(int x,int y);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"_6-3-函数指针"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-函数指针"}},[s._v("#")]),s._v(" 6.3 函数指针")]),s._v(" "),n("p",[s._v("本质上就是一个指针变量，该指针指向一个函数。")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("int (*fun)(int x,int y);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("赋值使用(两种写法)")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 赋值\nfun = &Function;\nfun = Function;\n// 使用\n(*fun)();  //更加直观看出就是通过指针调用函数\nfun();\t   //效果一样\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);