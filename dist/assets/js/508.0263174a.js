(window.webpackJsonp=window.webpackJsonp||[]).push([[508],{949:function(n,s,a){"use strict";a.r(s);var e=a(44),t=Object(e.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"_20-clean-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-clean-plugin"}},[n._v("#")]),n._v(" 20 clean-plugin")]),n._v(" "),a("blockquote",[a("p",[n._v("清除上一次打包留下来的（但这次打包不会用到的）（位于dist/bundle目录下的）垃圾。")]),n._v(" "),a("p",[n._v("原理：先清空打包目录再打包。")])]),n._v(" "),a("p",[a("strong",[n._v("webpack官网没，但常用")])]),n._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("\x3c!--\n1.什么是clean-webpack-plugin?\nwebpack-clean-plugin会在打包之前将我们指定的文件夹清空\n应用场景每次打包前将dist目录清空, 然后再存放新打包的内容, 避免新老混淆问题\n\n3.clean-webpack-plugin使用（文档链接）\nhttps://github.com/johnagan/clean-webpack-plugin\n3.1安装clean-webpack-plugin\nnpm install --save-dev clean-webpack-plugin\n3.2配置clean-webpack-plugin\nconst { CleanWebpackPlugin } = require('clean-webpack-plugin');\nplugins: [new CleanWebpackPlugin()]\n--\x3e")]),n._v("\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br")])]),a("p",[n._v("配置"),a("code",[n._v("webpack.config.js")])]),n._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("const")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v(" CleanWebpackPlugin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[n._v("'clean-webpack-plugin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("new")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("CleanWebpackPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);