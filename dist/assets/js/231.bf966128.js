(window.webpackJsonp=window.webpackJsonp||[]).push([[231],{645:function(t,e,n){"use strict";n.r(e);var _=n(44),v=Object(_.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"_063-类的前生今世"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_063-类的前生今世"}},[t._v("#")]),t._v(" 063 类的前生今世")]),t._v(" "),n("p",[t._v("工厂函数（有"),n("code",[t._v("let obj = {}; return obj;")]),t._v("）。")]),t._v(" "),n("p",[t._v("构造函数（使用关键字this，创建对象通过new  "),n("code",[t._v("this.name = name")]),t._v("）。")]),t._v(" "),n("p",[t._v("类")]),t._v(" "),n("p",[t._v("拓展：")]),t._v(" "),n("ol",[n("li",[t._v("工厂函数中使用new创建对象也是，返回什么new什么。new出的东西由return来决定。这就是return的权利。")]),t._v(" "),n("li",[t._v("new的本质就是 "),n("code",[t._v("let this = {}; return this;")]),t._v("，当然除了这些，还有别的，这个别的就是涉及到原型与原型链了。")]),t._v(" "),n("li",[t._v("不用this就是局部变量，又称私有属性。私有属性只能通过get，set方法访问。构造函数中不使用this，与工厂函数中不使用obj作用效果相同。例如："),n("code",[t._v("let num = 0;")]),t._v("没使用this，写在构造函数中，那么num就是一个私有变量。如果new两个对象，两个对象的num是不同的，但都是私有的。")]),t._v(" "),n("li",[t._v("原型对象中不能用this定义方法和属性。用就报错。")]),t._v(" "),n("li",[t._v("原型对象中的方法无法访问私有属性。")])])])}),[],!1,null,null,null);e.default=v.exports}}]);